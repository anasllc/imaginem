import type { Metadata } from "next";
import { Space_Grotesk } from "next/font/google";
// import localFont from "next/font/local";
import "./globals.css";
import Navbar from "./components/Navbar";
import Footer from "./components/Footer";
import Notice from "./components/Notice";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

const spaceGrotesk = Space_Grotesk({
  subsets: ["latin"],
  weight: ["400", "500", "700"],
});

export const metadata: Metadata = {
  title: "Imaginem",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={spaceGrotesk.className}>{children}</body>
    </html>
  );
}

// interface WatermarkSettings {
//   watermark: string;
//   position: string;
//   size: string;
//   padding: number;
// }
{
  /* <div className="w-full mt-5">
                  <p>Watermark position</p>
                  <select
                    value=""
                    // onChange={(e: ChangeEvent<HTMLSelectElement>) =>
                    //   setWatermarkSettings((prev) => ({
                    //     ...prev,
                    //     position: e.target.value,
                    //   }))
                    // }
                    className="bg-[#F3F3F3] border border-[#12121233] w-full h-[2.6rem] pl-3 text-[.8rem] mt-3"
                  >
                    <option value="Bottom right">Bottom right</option>
                    <option value="Top right">Top right</option>
                    <option value="Bottom left">Bottom left</option>
                    <option value="Top left">Top left</option>
                  </select>
                </div>

                <div className="w-full mt-5">
                  <p>Watermark size</p>
                  <select
                    value=""
                    // onChange={(e: ChangeEvent<HTMLSelectElement>) =>
                    //   setWatermarkSettings((prev) => ({
                    //     ...prev,
                    //     size: e.target.value,
                    //   }))
                    // }
                    className="bg-[#F3F3F3] border border-[#12121233] w-full h-[2.6rem] pl-3 text-[.8rem] mt-3"
                  >
                    <option value="Small">Small</option>
                    <option value="Medium">Medium</option>
                    <option value="Large">Large</option>
                  </select>
                </div>

                <div className="w-full mt-5">
                  <p>Watermark padding</p>
                  <input
                    type="number"
                    value=""
                    // onChange={(e: ChangeEvent<HTMLInputElement>) =>
                    //   setWatermarkSettings((prev) => ({
                    //     ...prev,
                    //     padding: Number(e.target.value),
                    //   }))
                    // }
                    min="0"
                    className="bg-[#F3F3F3] border border-[#12121233] w-full h-[2.6rem] pl-3 text-[.8rem] mt-3"
                  />
                </div>

                <div className="w-full mt-[1.4rem]">
                  <div className="flex w-full justify-between text-[.9rem] mb-2">
                    <p>Watermark opacity</p>
                    <p>%</p>
                  </div>
                  <div>
                    <input
                      type="range"
                      min="10"
                      max="100"
                      step="10"
                      value=""
                      // onChange={(e: ChangeEvent<HTMLInputElement>) =>
                      //   setWatermarkOpacity(Number(e.target.value))
                      // }
                      className={`${styles.slider} w-full mt-2`}
                    />
                  </div>
                </div> */
}
